#include<iostream>
using namespace std;
/*
int binarysearch(int arr[], int n ,int key){
    int start=0;int end=n-1;
    
    int mid=(start+end)/2;
    while(start<=end){
        if(arr[mid]==key){
            return mid;
        }
        if(key>arr[mid]){
            start=mid+1;

        }
        else{
            end=mid-1;
        }
        mid=(start+end)/2;

    return -1;
}

int main(){
    int arr1[]={1,2,3,4,5,6,7};
    int arr2[]={1,2,3,4,5,6,7,8};

    cout<<"odd "<< binarysearch(arr2,8,8)<<endl;
    return 0;
}
*/
/*
int pivot(int arr[],int n)
{
    int s=0;
    int e=n-1;
    int mid=s+(e-s)/2;

    while(s<e){
     if(arr[mid]>=arr[0]){
         s=mid+1;
     }
     else
     e=mid;
     mid=s+(e-s)/2;
    }
    return s;
}
int main()
{
    int arr[]={7,9,1,2,3};
    cout<<pivot(arr,5);
    return 0; 
}*/

void merge(int a[],int s,int mid, int e)
{
   int s2=mid+1;
   if(a[s2]>=a[mid]){
       return ;
   }
    
    while(s<=mid && s2<=e)
    {
        if(a[s]<=a[s2]){
            s++;
        }
        else{
            
            int index =s2;

            while(s!=index){
                swap(a[index],a[index-1]);
                index--;
            }
           

            s++;
            mid++;
            s2++;
        }
    }


}

void mergesort(int a[],int s,int e)
{
   if(s>=e){
    
   return;
   }
   int mid=s+(e-s)/2;
   mergesort(a,0,mid);
   mergesort(a,mid+1,e);
   merge(a,0,mid,e);
   
}


int main()
{
    int n;
    cin>>n;
    int a[100];
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }cout<<endl;
    
    mergesort(a,0,n-1);
    for(int i=0;i<n;i++){
        cout<<a[i]<<" ";
    }

}
