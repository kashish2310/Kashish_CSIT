#include<iostream>
#include<bits/stdc++.h>
using namespace std;
/*
int main (){
    
    stack<int> s;

    s.push(2);
    s.push(3);
  
    

    if(s.empty()){
        cout<<"empty"<<endl;
    } 
    else if(!s.empty()){
        cout<<"not empty"<<endl;
    }
    
    cout<<"size"<<s.size();

    return 0;
} 
*/
/*
class Stack {
    public:
    int *arr;
    int size;
    int top;

    Stack(int size){
         this->size=size;
         arr=new int[size];
         top=-1;
    }
void push(int element){
    if(size-top>1){
        top++;
        arr[top]=element;
    }
    else{
        cout<<"stack overflow"<<endl;
    }
}

void pop(){
    if(top>=0){
        top--;
    }
    else{
        cout<<"stack underflow"<<endl;
    }
}
int peek(){
    if(top>=0){
        return arr[top];
    }
    else
    {
        cout<<"no element"<<endl;
        return -1;
    }
}
bool empty(){
    if(top==-1){
        return true;
    }
    else
    return false;
}
    
};



int main(){
    Stack s(5);

    s.push(1);
    s.push(2);
    s.push(3);

    cout<< s.peek() <<endl;

    s.pop();
      cout<< s.peek() <<endl;

    s.pop();
      cout<< s.peek() <<endl;
   

     if(s.empty()){
         cout<<"empty"<<endl;
     } 
     else if(!s.empty()){
         cout<<"not empty"<<endl;
     }
      return 0;
}
*/
/*
int main(){
    stack<int> s;

    s.push(1);
    s.push(2);
    s.push(3);
    cout<<s.size()<<endl;
    cout<<s.top()<<endl;
    s.pop();
    cout<<s.top()<<endl;
    s.pop();
   

    if(s.empty()){
        cout<<"yes"<<endl;
    }
    else{
        cout<<"no"<<endl;
    }

}
*/
